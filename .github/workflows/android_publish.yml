name: Android Publish
run-name: Android Publish execute by @${{ github.actor }}

on: [ workflow_dispatch ]
#on:
#  push:
#    branches:
#      - 'master'

env:
  REPO_USERID: ${{ secrets.REPO_USERID }}
  REPO_TOKEN: ${{ secrets.REPO_TOKEN }}

jobs:
  test:
    name: Code Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Project
        uses: ./.github/actions/android

      - name: Run Lint
        run: ./gradlew app:lintDebug

      - name: Run Jacoco Test Coverage Verification
        run: ./gradlew app:jacocoTestCoverageVerification

      - name: Run SonarQube Scan
        run: ./gradlew app:sonarqube -Dsonar.host.url=https://sonarcloud.io/ -Dsonar.login=${{ secrets.SONARCLOUDTOKEN }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  artifact:
    name: Artifact
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'zulu'
          cache: 'gradle'
          check-latest: true

      - name: Setup Project
        uses: ./.github/actions/android

      - name: Signing App Release
        run: |
          ./gradlew app:bundleRelease
          ./gradlew app:assembleRelease

      - name: Upload Artifact APK Release
        uses: actions/upload-artifact@v3
        with:
          name: apk-release
          path: ./app/build/outputs/apk/release

      - name: Upload Artifact Bundle Release
        uses: actions/upload-artifact@v3
        with:
          name: apk-bundle-release
          path: ./app/build/outputs/bundle/release

      - name: Deploy to Alpha
        uses: r0adkll/upload-google-play@v1.0.17
        with:
          serviceAccountJsonPlainText: ${{ secrets.SIGNING_SERVICE_ACCOUNT }}
          packageName: com.afoxplus.yalisto
          releaseFiles: ./app/build/outputs/bundle/release/app-release.aab
          track: alpha

  tag:
    name: Tag
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Project
        uses: ./.github/actions/android

      - name: Create Tag Release
        run: |
          currentVersion=`grep version ./buildSrc/src/main/kotlin/ConfigureApp.kt | awk -F" " '{ print $5 }' `
          versionFormatted=`echo $currentVersion | sed 's/.\(.*\)/\1/' | sed 's/\(.*\)./\1/'`
          echo "Version: $versionFormatted"
          git tag $versionFormatted
          git push origin --tags